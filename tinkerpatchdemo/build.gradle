import java.lang.reflect.Field

apply plugin: 'com.android.application'



android {
    compileSdkVersion 28


    defaultConfig {
        applicationId "com.itxiaox.tinkerdemo"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    signingConfigs {
        release {
            storeFile file("${rootDir}/debug.jks")
            storePassword '123456'
            keyAlias 'TinkerDemo'
            keyPassword '123456'
        }

        debug {
            storeFile file("${rootDir}/debug.jks")
            storePassword '123456'
            keyAlias 'TinkerDemo'
            keyPassword '123456'
        }
    }

    buildTypes {

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt')
            signingConfig signingConfigs.release
        }
        debug {
            debuggable true
            minifyEnabled false
            signingConfig signingConfigs.debug
        }
    }
    lintOptions {
        abortOnError false
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "tinkerdemo_${variant.buildType.name}_${defaultConfig.versionName}_${releaseTime()}.apk"
        }
    }
}

static def releaseTime() {
    return new Date().format("yyyyMMddHHmmss")
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'


    // 若使用annotation需要单独引用,对于tinker的其他库都无需再引用
//    provided("com.tinkerpatch.tinker:tinker-android-anno:1.9.13.3")
    implementation("com.tinkerpatch.sdk:tinkerpatch-android-sdk:1.2.13.3"){ changing = true }
}

apply from: 'tinkerpatch.gradle'

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}